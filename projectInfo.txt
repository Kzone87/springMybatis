your-project
│
├── src
│   └── main
│       ├── java
│       │   └── path
│       │       └── to
│       │           ├── User.java               // VO 클래스
│       │           ├── UserMapper.java         // Mapper 인터페이스
│       │           ├── UserService.java         // 서비스 클래스
│       │           └── UserController.java      // 컨트롤러 클래스
│       └── resources
│           ├── applicationContext.xml           // 스프링 설정 파일
│           ├── mybatis-config.xml               // MyBatis 설정 파일
│           └── path
│               └── to
│                   └── UserMapper.xml          // Mapper XML 파일
└── pom.xml                                      // Maven 빌드 파일


파일 설명
	User.java: 유저 정보를 담기 위한 VO(Value Object) 클래스.
	UserMapper.java: 유저 정보를 조회하기 위한 Mapper 인터페이스.
	UserService.java: 비즈니스 로직을 담당하는 서비스 클래스.
	UserController.java: REST API를 제공하는 컨트롤러 클래스.
	applicationContext.xml: 스프링의 빈 설정 파일로, 데이터 소스와 MyBatis 설정을 포함.
	mybatis-config.xml: MyBatis의 전역 설정 파일로, 데이터베이스 연결 정보와 매퍼 등록.
	UserMapper.xml: SQL 쿼리를 정의한 Mapper XML 파일.
	
	
1. Spring Core
	주요 기능: 기본적인 의존성 주입과 애플리케이션 설정을 담당합니다.
	주요 어노테이션:
	@Component: 일반적인 Spring 빈을 정의합니다.
	@Service: 서비스 계층의 빈을 정의합니다.
	@Repository: 데이터 액세스 계층의 빈을 정의합니다.
	@Configuration: 설정 클래스를 정의합니다.
2. Spring Web
	주요 기능: 웹 애플리케이션을 위한 기본 기능을 제공합니다.
	주요 어노테이션:
	@Controller: MVC 패턴에서 컨트롤러 클래스를 정의합니다.
	@RequestMapping: 요청 URL과 메서드를 매핑합니다.
	@SessionAttributes: 세션 속성을 관리합니다.
3. Spring Web MVC
	주요 기능: MVC 아키텍처에 기반한 웹 애플리케이션 개발을 지원합니다.
	주요 어노테이션:
	@RestController: RESTful 웹 서비스의 컨트롤러를 정의합니다. @Controller와 @ResponseBody의 조합입니다.
	@GetMapping, @PostMapping, @PutMapping, @DeleteMapping: HTTP 메서드에 따른 요청 매핑을 지원합니다.
	@PathVariable: URL 경로 변수에 매핑합니다.
	@RequestParam: 요청 파라미터에 매핑합니다.
	@ResponseBody: 메서드의 반환 값을 HTTP 응답 본문으로 변환합니다.
	
	
	
	

my-project
│
├── src
│   ├── main
│   │   ├── java
│   │   │   └── com
│   │   │       └── example
│   │   │           ├── controller
│   │   │           │   └── UserController.java       // 컨트롤러 클래스
│   │   │           ├── service
│   │   │           │   └── UserService.java          // 서비스 클래스
│   │   │           └── mapper
│   │   │               └── UserMapper.java           // Mapper 인터페이스
│   │   │           
│   │   ├── resources
│   │   │   ├── mybatis
│   │   │   │   └── UserMapper.xml                     // MyBatis SQL 쿼리 정의
│   │   │   └── mybatis-config.xml                      // MyBatis 설정 파일
│   │   │   
│   │   ├── webapp
│   │   │   ├── WEB-INF
│   │   │   │   └── web.xml                             // 웹 애플리케이션 설정
│   │   │   └── index.html                              // HTML 폼 파일
│   │   │
│   ├── test
│   │   └── java
│   │       └── com
│   │           └── example
│   │               └── UserServiceTest.java           // 서비스 테스트 클래스
│
└── pom.xml                                            // Maven 설정 파일

각 파일 및 디렉토리 설명
src/main/java/com/example/controller/UserController.java

클라이언트 요청을 처리하는 REST 컨트롤러입니다.
엑셀 파일을 다운로드할 수 있는 메서드를 포함합니다.


src/main/java/com/example/service/UserService.java
비즈니스 로직을 처리하는 서비스 클래스입니다.
사용자 검색 메서드를 포함하고 있습니다.


src/main/java/com/example/mapper/UserMapper.java
MyBatis를 사용하여 데이터베이스와 상호작용하는 인터페이스입니다.


src/main/resources/mybatis/UserMapper.xml
SQL 쿼리를 정의하는 XML 파일입니다.
사용자 검색 쿼리를 포함합니다.


src/main/resources/mybatis-config.xml
MyBatis의 설정 파일입니다.
데이터베이스 연결 및 매퍼 위치 등을 설정합니다.


src/main/webapp/WEB-INF/web.xml
웹 애플리케이션의 설정을 포함하는 XML 파일입니다.
서블릿 및 필터 설정을 포함합니다.


src/main/webapp/index.html
사용자가 검색 조건을 입력할 수 있는 HTML 폼을 포함하는 파일입니다.


src/test/java/com/example/UserServiceTest.java
UserService 클래스에 대한 단위 테스트를 포함하는 파일입니다.


pom.xml
Maven 프로젝트의 설정 파일입니다.
프로젝트에 필요한 의존성과 빌드 설정이 포함됩니다.
	
	
	